Nonterminals useless in grammar

   comandoPrint
   comandoInput


Terminals unused in grammar

   PRINT
   INPUT
   PARADAFOR
   ATRIBUICAOFOR


Rules useless in grammar

   58 comandoPrint: PRINT OPEN_BRACE

   59 comandoInput: INPUT OPEN_BLOCK


Grammar

    0 $accept: programa $end

    1 programa: lista_comando

    2 lista_comando: comando EOL lista_comando
    3              | comando EOL
    4              | if_comando lista_comando
    5              | if_comando
    6              | for_comando
    7              | for_comando lista_comando

    8 bloco: OPEN_BLOCK lista_comando CLOSE_BLOCK

    9 ident: ID

   10 exp: NUMREAL
   11    | NUMINTEIRO
   12    | STRING
   13    | ident
   14    | soma
   15    | subtracao
   16    | divisao
   17    | multiplicacao
   18    | restoDiv

   19 comando: atribuicao
   20        | bloco
   21        | if_comando
   22        | for_comando

   23 atribuicao: REAL ident '=' exp
   24           | INT ident '=' exp
   25           | CHAR ident '=' exp

   26 comparacao: igualdade
   27           | diferenca
   28           | compMaior
   29           | compMenor
   30           | compMaiorIgual
   31           | compMenorIgual
   32           | compAnd
   33           | compOr
   34           | compNot

   35 soma: exp '+' exp

   36 subtracao: exp '-' exp

   37 divisao: exp '/' exp

   38 multiplicacao: exp '*' exp

   39 restoDiv: exp '%' exp

   40 igualdade: exp EQ exp

   41 diferenca: exp NE exp

   42 compMaiorIgual: exp MAIORIGUAL exp

   43 compMenorIgual: exp MENORIGUAL exp

   44 compMenor: exp MENOR exp

   45 compMaior: exp MAIOR exp

   46 compAnd: exp AND exp

   47 compOr: exp OR exp

   48 compNot: NOT exp

   49 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco
   50           | IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco

   51 paradaFor: REAL ident '=' exp
   52          | INT ident '=' exp
   53          | CHAR ident '=' exp

   54 atribuicaoFor: REAL ident '=' exp
   55              | INT ident '=' exp
   56              | CHAR ident '=' exp

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco


Terminals, with rules where they appear

$end (0) 0
'%' (37) 39
'*' (42) 38
'+' (43) 35
'-' (45) 36
'/' (47) 37
'=' (61) 23 24 25 51 52 53 54 55 56
error (256)
PRINT (258)
INPUT (259)
IF (260) 49 50
ELSE (261) 50
FOR (262) 57
ID (263) 9
NUMINTEIRO (264) 11
NUMREAL (265) 10
STRING (266) 12
EOL (267) 2 3 57
MAIORIGUAL (268) 42
MENORIGUAL (269) 43
MENOR (270) 44
MAIOR (271) 45
AND (272) 46
OR (273) 47
NOT (274) 48
PARADAFOR (275)
ATRIBUICAOFOR (276)
INT (277) 24 52 55
REAL (278) 23 51 54
CHAR (279) 25 53 56
OPEN_BRACE (280) 49 50 57
CLOSE_BRACE (281) 49 50 57
OPEN_BLOCK (282) 8
CLOSE_BLOCK (283) 8
EQ (284) 40
NE (285) 41


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
programa (38)
    on left: 1, on right: 0
lista_comando (39)
    on left: 2 3 4 5 6 7, on right: 1 2 4 7 8
bloco (40)
    on left: 8, on right: 20 49 50 57
ident (41)
    on left: 9, on right: 13 23 24 25 51 52 53 54 55 56
exp (42)
    on left: 10 11 12 13 14 15 16 17 18, on right: 23 24 25 35 36 37
    38 39 40 41 42 43 44 45 46 47 48 51 52 53 54 55 56
comando (43)
    on left: 19 20 21 22, on right: 2 3
atribuicao (44)
    on left: 23 24 25, on right: 19
comparacao (45)
    on left: 26 27 28 29 30 31 32 33 34, on right: 49 50 57
soma (46)
    on left: 35, on right: 14
subtracao (47)
    on left: 36, on right: 15
divisao (48)
    on left: 37, on right: 16
multiplicacao (49)
    on left: 38, on right: 17
restoDiv (50)
    on left: 39, on right: 18
igualdade (51)
    on left: 40, on right: 26
diferenca (52)
    on left: 41, on right: 27
compMaiorIgual (53)
    on left: 42, on right: 30
compMenorIgual (54)
    on left: 43, on right: 31
compMenor (55)
    on left: 44, on right: 29
compMaior (56)
    on left: 45, on right: 28
compAnd (57)
    on left: 46, on right: 32
compOr (58)
    on left: 47, on right: 33
compNot (59)
    on left: 48, on right: 34
if_comando (60)
    on left: 49 50, on right: 4 5 21
paradaFor (61)
    on left: 51 52 53, on right: 57
atribuicaoFor (62)
    on left: 54 55 56, on right: 57
for_comando (63)
    on left: 57, on right: 6 7 22


state 0

    0 $accept: . programa $end

    IF          shift, and go to state 1
    FOR         shift, and go to state 2
    INT         shift, and go to state 3
    REAL        shift, and go to state 4
    CHAR        shift, and go to state 5
    OPEN_BLOCK  shift, and go to state 6

    programa       go to state 7
    lista_comando  go to state 8
    bloco          go to state 9
    comando        go to state 10
    atribuicao     go to state 11
    if_comando     go to state 12
    for_comando    go to state 13


state 1

   49 if_comando: IF . OPEN_BRACE comparacao CLOSE_BRACE bloco
   50           | IF . OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco

    OPEN_BRACE  shift, and go to state 14


state 2

   57 for_comando: FOR . OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    OPEN_BRACE  shift, and go to state 15


state 3

   24 atribuicao: INT . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 17


state 4

   23 atribuicao: REAL . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 18


state 5

   25 atribuicao: CHAR . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 19


state 6

    8 bloco: OPEN_BLOCK . lista_comando CLOSE_BLOCK

    IF          shift, and go to state 1
    FOR         shift, and go to state 2
    INT         shift, and go to state 3
    REAL        shift, and go to state 4
    CHAR        shift, and go to state 5
    OPEN_BLOCK  shift, and go to state 6

    lista_comando  go to state 20
    bloco          go to state 9
    comando        go to state 10
    atribuicao     go to state 11
    if_comando     go to state 12
    for_comando    go to state 13


state 7

    0 $accept: programa . $end

    $end  shift, and go to state 21


state 8

    1 programa: lista_comando .

    $default  reduce using rule 1 (programa)


state 9

   20 comando: bloco .

    $default  reduce using rule 20 (comando)


state 10

    2 lista_comando: comando . EOL lista_comando
    3              | comando . EOL

    EOL  shift, and go to state 22


state 11

   19 comando: atribuicao .

    $default  reduce using rule 19 (comando)


state 12

    4 lista_comando: if_comando . lista_comando
    5              | if_comando .
   21 comando: if_comando .

    IF          shift, and go to state 1
    FOR         shift, and go to state 2
    INT         shift, and go to state 3
    REAL        shift, and go to state 4
    CHAR        shift, and go to state 5
    OPEN_BLOCK  shift, and go to state 6

    EOL       reduce using rule 21 (comando)
    $default  reduce using rule 5 (lista_comando)

    lista_comando  go to state 23
    bloco          go to state 9
    comando        go to state 10
    atribuicao     go to state 11
    if_comando     go to state 12
    for_comando    go to state 13


state 13

    6 lista_comando: for_comando .
    7              | for_comando . lista_comando
   22 comando: for_comando .

    IF          shift, and go to state 1
    FOR         shift, and go to state 2
    INT         shift, and go to state 3
    REAL        shift, and go to state 4
    CHAR        shift, and go to state 5
    OPEN_BLOCK  shift, and go to state 6

    EOL       reduce using rule 22 (comando)
    $default  reduce using rule 6 (lista_comando)

    lista_comando  go to state 24
    bloco          go to state 9
    comando        go to state 10
    atribuicao     go to state 11
    if_comando     go to state 12
    for_comando    go to state 13


state 14

   49 if_comando: IF OPEN_BRACE . comparacao CLOSE_BRACE bloco
   50           | IF OPEN_BRACE . comparacao CLOSE_BRACE bloco ELSE bloco

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27
    NOT         shift, and go to state 28

    ident           go to state 29
    exp             go to state 30
    comparacao      go to state 31
    soma            go to state 32
    subtracao       go to state 33
    divisao         go to state 34
    multiplicacao   go to state 35
    restoDiv        go to state 36
    igualdade       go to state 37
    diferenca       go to state 38
    compMaiorIgual  go to state 39
    compMenorIgual  go to state 40
    compMenor       go to state 41
    compMaior       go to state 42
    compAnd         go to state 43
    compOr          go to state 44
    compNot         go to state 45


state 15

   57 for_comando: FOR OPEN_BRACE . atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    INT   shift, and go to state 46
    REAL  shift, and go to state 47
    CHAR  shift, and go to state 48

    atribuicaoFor  go to state 49


state 16

    9 ident: ID .

    $default  reduce using rule 9 (ident)


state 17

   24 atribuicao: INT ident . '=' exp

    '='  shift, and go to state 50


state 18

   23 atribuicao: REAL ident . '=' exp

    '='  shift, and go to state 51


state 19

   25 atribuicao: CHAR ident . '=' exp

    '='  shift, and go to state 52


state 20

    8 bloco: OPEN_BLOCK lista_comando . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 53


state 21

    0 $accept: programa $end .

    $default  accept


state 22

    2 lista_comando: comando EOL . lista_comando
    3              | comando EOL .

    IF          shift, and go to state 1
    FOR         shift, and go to state 2
    INT         shift, and go to state 3
    REAL        shift, and go to state 4
    CHAR        shift, and go to state 5
    OPEN_BLOCK  shift, and go to state 6

    $default  reduce using rule 3 (lista_comando)

    lista_comando  go to state 54
    bloco          go to state 9
    comando        go to state 10
    atribuicao     go to state 11
    if_comando     go to state 12
    for_comando    go to state 13


state 23

    4 lista_comando: if_comando lista_comando .

    $default  reduce using rule 4 (lista_comando)


state 24

    7 lista_comando: for_comando lista_comando .

    $default  reduce using rule 7 (lista_comando)


state 25

   11 exp: NUMINTEIRO .

    $default  reduce using rule 11 (exp)


state 26

   10 exp: NUMREAL .

    $default  reduce using rule 10 (exp)


state 27

   12 exp: STRING .

    $default  reduce using rule 12 (exp)


state 28

   48 compNot: NOT . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 55
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 29

   13 exp: ident .

    $default  reduce using rule 13 (exp)


state 30

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   40 igualdade: exp . EQ exp
   41 diferenca: exp . NE exp
   42 compMaiorIgual: exp . MAIORIGUAL exp
   43 compMenorIgual: exp . MENORIGUAL exp
   44 compMenor: exp . MENOR exp
   45 compMaior: exp . MAIOR exp
   46 compAnd: exp . AND exp
   47 compOr: exp . OR exp

    MAIORIGUAL  shift, and go to state 56
    MENORIGUAL  shift, and go to state 57
    MENOR       shift, and go to state 58
    MAIOR       shift, and go to state 59
    AND         shift, and go to state 60
    OR          shift, and go to state 61
    EQ          shift, and go to state 62
    NE          shift, and go to state 63
    '-'         shift, and go to state 64
    '+'         shift, and go to state 65
    '*'         shift, and go to state 66
    '/'         shift, and go to state 67
    '%'         shift, and go to state 68


state 31

   49 if_comando: IF OPEN_BRACE comparacao . CLOSE_BRACE bloco
   50           | IF OPEN_BRACE comparacao . CLOSE_BRACE bloco ELSE bloco

    CLOSE_BRACE  shift, and go to state 69


state 32

   14 exp: soma .

    $default  reduce using rule 14 (exp)


state 33

   15 exp: subtracao .

    $default  reduce using rule 15 (exp)


state 34

   16 exp: divisao .

    $default  reduce using rule 16 (exp)


state 35

   17 exp: multiplicacao .

    $default  reduce using rule 17 (exp)


state 36

   18 exp: restoDiv .

    $default  reduce using rule 18 (exp)


state 37

   26 comparacao: igualdade .

    $default  reduce using rule 26 (comparacao)


state 38

   27 comparacao: diferenca .

    $default  reduce using rule 27 (comparacao)


state 39

   30 comparacao: compMaiorIgual .

    $default  reduce using rule 30 (comparacao)


state 40

   31 comparacao: compMenorIgual .

    $default  reduce using rule 31 (comparacao)


state 41

   29 comparacao: compMenor .

    $default  reduce using rule 29 (comparacao)


state 42

   28 comparacao: compMaior .

    $default  reduce using rule 28 (comparacao)


state 43

   32 comparacao: compAnd .

    $default  reduce using rule 32 (comparacao)


state 44

   33 comparacao: compOr .

    $default  reduce using rule 33 (comparacao)


state 45

   34 comparacao: compNot .

    $default  reduce using rule 34 (comparacao)


state 46

   55 atribuicaoFor: INT . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 70


state 47

   54 atribuicaoFor: REAL . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 71


state 48

   56 atribuicaoFor: CHAR . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 72


state 49

   57 for_comando: FOR OPEN_BRACE atribuicaoFor . EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    EOL  shift, and go to state 73


state 50

   24 atribuicao: INT ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 74
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 51

   23 atribuicao: REAL ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 75
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 52

   25 atribuicao: CHAR ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 76
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 53

    8 bloco: OPEN_BLOCK lista_comando CLOSE_BLOCK .

    $default  reduce using rule 8 (bloco)


state 54

    2 lista_comando: comando EOL lista_comando .

    $default  reduce using rule 2 (lista_comando)


state 55

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   48 compNot: NOT exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 48 (compNot)


state 56

   42 compMaiorIgual: exp MAIORIGUAL . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 77
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 57

   43 compMenorIgual: exp MENORIGUAL . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 78
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 58

   44 compMenor: exp MENOR . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 79
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 59

   45 compMaior: exp MAIOR . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 80
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 60

   46 compAnd: exp AND . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 81
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 61

   47 compOr: exp OR . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 82
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 62

   40 igualdade: exp EQ . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 83
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 63

   41 diferenca: exp NE . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 84
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 64

   36 subtracao: exp '-' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 85
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 65

   35 soma: exp '+' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 86
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 66

   38 multiplicacao: exp '*' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 87
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 67

   37 divisao: exp '/' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 88
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 68

   39 restoDiv: exp '%' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 89
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 69

   49 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE . bloco
   50           | IF OPEN_BRACE comparacao CLOSE_BRACE . bloco ELSE bloco

    OPEN_BLOCK  shift, and go to state 6

    bloco  go to state 90


state 70

   55 atribuicaoFor: INT ident . '=' exp

    '='  shift, and go to state 91


state 71

   54 atribuicaoFor: REAL ident . '=' exp

    '='  shift, and go to state 92


state 72

   56 atribuicaoFor: CHAR ident . '=' exp

    '='  shift, and go to state 93


state 73

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL . comparacao EOL paradaFor CLOSE_BRACE bloco

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27
    NOT         shift, and go to state 28

    ident           go to state 29
    exp             go to state 30
    comparacao      go to state 94
    soma            go to state 32
    subtracao       go to state 33
    divisao         go to state 34
    multiplicacao   go to state 35
    restoDiv        go to state 36
    igualdade       go to state 37
    diferenca       go to state 38
    compMaiorIgual  go to state 39
    compMenorIgual  go to state 40
    compMenor       go to state 41
    compMaior       go to state 42
    compAnd         go to state 43
    compOr          go to state 44
    compNot         go to state 45


state 74

   24 atribuicao: INT ident '=' exp .
   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 24 (atribuicao)


state 75

   23 atribuicao: REAL ident '=' exp .
   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 23 (atribuicao)


state 76

   25 atribuicao: CHAR ident '=' exp .
   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 25 (atribuicao)


state 77

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   42 compMaiorIgual: exp MAIORIGUAL exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 42 (compMaiorIgual)


state 78

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   43 compMenorIgual: exp MENORIGUAL exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 43 (compMenorIgual)


state 79

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   44 compMenor: exp MENOR exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 44 (compMenor)


state 80

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   45 compMaior: exp MAIOR exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 45 (compMaior)


state 81

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   46 compAnd: exp AND exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 46 (compAnd)


state 82

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   47 compOr: exp OR exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 47 (compOr)


state 83

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   40 igualdade: exp EQ exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 40 (igualdade)


state 84

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   41 diferenca: exp NE exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 41 (diferenca)


state 85

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   36          | exp '-' exp .
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 36 (subtracao)


state 86

   35 soma: exp . '+' exp
   35     | exp '+' exp .
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 35 (soma)


state 87

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   38              | exp '*' exp .
   39 restoDiv: exp . '%' exp

    '%'  shift, and go to state 68

    $default  reduce using rule 38 (multiplicacao)


state 88

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   37        | exp '/' exp .
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp

    '%'  shift, and go to state 68

    $default  reduce using rule 37 (divisao)


state 89

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   39         | exp '%' exp .

    $default  reduce using rule 39 (restoDiv)


state 90

   49 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco .
   50           | IF OPEN_BRACE comparacao CLOSE_BRACE bloco . ELSE bloco

    ELSE  shift, and go to state 95

    $default  reduce using rule 49 (if_comando)


state 91

   55 atribuicaoFor: INT ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 96
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 92

   54 atribuicaoFor: REAL ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 97
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 93

   56 atribuicaoFor: CHAR ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 98
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 94

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao . EOL paradaFor CLOSE_BRACE bloco

    EOL  shift, and go to state 99


state 95

   50 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE . bloco

    OPEN_BLOCK  shift, and go to state 6

    bloco  go to state 100


state 96

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   55 atribuicaoFor: INT ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 55 (atribuicaoFor)


state 97

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   54 atribuicaoFor: REAL ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 54 (atribuicaoFor)


state 98

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   56 atribuicaoFor: CHAR ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 56 (atribuicaoFor)


state 99

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL . paradaFor CLOSE_BRACE bloco

    INT   shift, and go to state 101
    REAL  shift, and go to state 102
    CHAR  shift, and go to state 103

    paradaFor  go to state 104


state 100

   50 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco .

    $default  reduce using rule 50 (if_comando)


state 101

   52 paradaFor: INT . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 105


state 102

   51 paradaFor: REAL . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 106


state 103

   53 paradaFor: CHAR . ident '=' exp

    ID  shift, and go to state 16

    ident  go to state 107


state 104

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor . CLOSE_BRACE bloco

    CLOSE_BRACE  shift, and go to state 108


state 105

   52 paradaFor: INT ident . '=' exp

    '='  shift, and go to state 109


state 106

   51 paradaFor: REAL ident . '=' exp

    '='  shift, and go to state 110


state 107

   53 paradaFor: CHAR ident . '=' exp

    '='  shift, and go to state 111


state 108

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE . bloco

    OPEN_BLOCK  shift, and go to state 6

    bloco  go to state 112


state 109

   52 paradaFor: INT ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 113
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 110

   51 paradaFor: REAL ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 114
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 111

   53 paradaFor: CHAR ident '=' . exp

    ID          shift, and go to state 16
    NUMINTEIRO  shift, and go to state 25
    NUMREAL     shift, and go to state 26
    STRING      shift, and go to state 27

    ident          go to state 29
    exp            go to state 115
    soma           go to state 32
    subtracao      go to state 33
    divisao        go to state 34
    multiplicacao  go to state 35
    restoDiv       go to state 36


state 112

   57 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco .

    $default  reduce using rule 57 (for_comando)


state 113

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   52 paradaFor: INT ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 52 (paradaFor)


state 114

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   51 paradaFor: REAL ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 51 (paradaFor)


state 115

   35 soma: exp . '+' exp
   36 subtracao: exp . '-' exp
   37 divisao: exp . '/' exp
   38 multiplicacao: exp . '*' exp
   39 restoDiv: exp . '%' exp
   53 paradaFor: CHAR ident '=' exp .

    '-'  shift, and go to state 64
    '+'  shift, and go to state 65
    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 53 (paradaFor)
