Terminals unused in grammar

   PARADAFOR
   ATRIBUICAOFOR


Grammar

    0 $accept: programa $end

    1 programa: lista_comando

    2 lista_comando: comando EOL
    3              | comando EOL lista_comando
    4              | if_comando lista_comando
    5              | if_comando
    6              | for_comando
    7              | for_comando lista_comando

    8 bloco: OPEN_BLOCK lista_comando CLOSE_BLOCK

    9 ident: ID

   10 exp: NUMREAL
   11    | NUMINTEIRO
   12    | STRING
   13    | ident
   14    | soma
   15    | subtracao
   16    | divisao
   17    | multiplicacao
   18    | restoDiv

   19 comando: atribuicao
   20        | bloco
   21        | if_comando
   22        | for_comando
   23        | comandoPrintint
   24        | comandoPrintreal
   25        | comandoPrintstring
   26        | comandoInput

   27 atribuicao: REAL ident '=' exp
   28           | INT ident '=' exp
   29           | CHAR ident '=' exp

   30 comparacao: igualdade
   31           | diferenca
   32           | compMaior
   33           | compMenor
   34           | compMaiorIgual
   35           | compMenorIgual
   36           | compAnd
   37           | compOr
   38           | compNot

   39 soma: exp '+' exp

   40 subtracao: exp '-' exp

   41 divisao: exp '/' exp

   42 multiplicacao: exp '*' exp

   43 restoDiv: exp '%' exp

   44 igualdade: exp EQ exp

   45 diferenca: exp NE exp

   46 compMaiorIgual: exp MAIORIGUAL exp

   47 compMenorIgual: exp MENORIGUAL exp

   48 compMenor: exp MENOR exp

   49 compMaior: exp MAIOR exp

   50 compAnd: exp AND exp

   51 compOr: exp OR exp

   52 compNot: NOT exp

   53 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco
   54           | IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco

   55 paradaFor: REAL ident '=' exp
   56          | INT ident '=' exp
   57          | CHAR ident '=' exp

   58 atribuicaoFor: REAL ident '=' exp
   59              | INT ident '=' exp
   60              | CHAR ident '=' exp

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco

   62 comandoPrintint: PRINT OPEN_BRACE INT ident CLOSE_BRACE

   63 comandoPrintreal: PRINT OPEN_BRACE REAL ident CLOSE_BRACE

   64 comandoPrintstring: PRINT OPEN_BRACE CHAR ident CLOSE_BRACE

   65 comandoInput: REAL ident '=' INPUT OPEN_BRACE CLOSE_BRACE
   66             | INT ident '=' INPUT OPEN_BRACE CLOSE_BRACE
   67             | CHAR ident '=' INPUT OPEN_BRACE CLOSE_BRACE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 43
'*' (42) 42
'+' (43) 39
'-' (45) 40
'/' (47) 41
'=' (61) 27 28 29 55 56 57 58 59 60 65 66 67
error (256)
PRINT (258) 62 63 64
INPUT (259) 65 66 67
IF (260) 53 54
ELSE (261) 54
FOR (262) 61
ID (263) 9
NUMINTEIRO (264) 11
NUMREAL (265) 10
STRING (266) 12
EOL (267) 2 3 61
MAIORIGUAL (268) 46
MENORIGUAL (269) 47
MENOR (270) 48
MAIOR (271) 49
AND (272) 50
OR (273) 51
NOT (274) 52
PARADAFOR (275)
ATRIBUICAOFOR (276)
INT (277) 28 56 59 62 66
REAL (278) 27 55 58 63 65
CHAR (279) 29 57 60 64 67
OPEN_BRACE (280) 53 54 61 62 63 64 65 66 67
CLOSE_BRACE (281) 53 54 61 62 63 64 65 66 67
OPEN_BLOCK (282) 8
CLOSE_BLOCK (283) 8
EQ (284) 44
NE (285) 45


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
programa (38)
    on left: 1, on right: 0
lista_comando (39)
    on left: 2 3 4 5 6 7, on right: 1 3 4 7 8
bloco (40)
    on left: 8, on right: 20 53 54 61
ident (41)
    on left: 9, on right: 13 27 28 29 55 56 57 58 59 60 62 63 64 65
    66 67
exp (42)
    on left: 10 11 12 13 14 15 16 17 18, on right: 27 28 29 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 55 56 57 58 59 60
comando (43)
    on left: 19 20 21 22 23 24 25 26, on right: 2 3
atribuicao (44)
    on left: 27 28 29, on right: 19
comparacao (45)
    on left: 30 31 32 33 34 35 36 37 38, on right: 53 54 61
soma (46)
    on left: 39, on right: 14
subtracao (47)
    on left: 40, on right: 15
divisao (48)
    on left: 41, on right: 16
multiplicacao (49)
    on left: 42, on right: 17
restoDiv (50)
    on left: 43, on right: 18
igualdade (51)
    on left: 44, on right: 30
diferenca (52)
    on left: 45, on right: 31
compMaiorIgual (53)
    on left: 46, on right: 34
compMenorIgual (54)
    on left: 47, on right: 35
compMenor (55)
    on left: 48, on right: 33
compMaior (56)
    on left: 49, on right: 32
compAnd (57)
    on left: 50, on right: 36
compOr (58)
    on left: 51, on right: 37
compNot (59)
    on left: 52, on right: 38
if_comando (60)
    on left: 53 54, on right: 4 5 21
paradaFor (61)
    on left: 55 56 57, on right: 61
atribuicaoFor (62)
    on left: 58 59 60, on right: 61
for_comando (63)
    on left: 61, on right: 6 7 22
comandoPrintint (64)
    on left: 62, on right: 23
comandoPrintreal (65)
    on left: 63, on right: 24
comandoPrintstring (66)
    on left: 64, on right: 25
comandoInput (67)
    on left: 65 66 67, on right: 26


state 0

    0 $accept: . programa $end

    PRINT       shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    INT         shift, and go to state 4
    REAL        shift, and go to state 5
    CHAR        shift, and go to state 6
    OPEN_BLOCK  shift, and go to state 7

    programa            go to state 8
    lista_comando       go to state 9
    bloco               go to state 10
    comando             go to state 11
    atribuicao          go to state 12
    if_comando          go to state 13
    for_comando         go to state 14
    comandoPrintint     go to state 15
    comandoPrintreal    go to state 16
    comandoPrintstring  go to state 17
    comandoInput        go to state 18


state 1

   62 comandoPrintint: PRINT . OPEN_BRACE INT ident CLOSE_BRACE
   63 comandoPrintreal: PRINT . OPEN_BRACE REAL ident CLOSE_BRACE
   64 comandoPrintstring: PRINT . OPEN_BRACE CHAR ident CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 19


state 2

   53 if_comando: IF . OPEN_BRACE comparacao CLOSE_BRACE bloco
   54           | IF . OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco

    OPEN_BRACE  shift, and go to state 20


state 3

   61 for_comando: FOR . OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    OPEN_BRACE  shift, and go to state 21


state 4

   28 atribuicao: INT . ident '=' exp
   66 comandoInput: INT . ident '=' INPUT OPEN_BRACE CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 23


state 5

   27 atribuicao: REAL . ident '=' exp
   65 comandoInput: REAL . ident '=' INPUT OPEN_BRACE CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 24


state 6

   29 atribuicao: CHAR . ident '=' exp
   67 comandoInput: CHAR . ident '=' INPUT OPEN_BRACE CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 25


state 7

    8 bloco: OPEN_BLOCK . lista_comando CLOSE_BLOCK

    PRINT       shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    INT         shift, and go to state 4
    REAL        shift, and go to state 5
    CHAR        shift, and go to state 6
    OPEN_BLOCK  shift, and go to state 7

    lista_comando       go to state 26
    bloco               go to state 10
    comando             go to state 11
    atribuicao          go to state 12
    if_comando          go to state 13
    for_comando         go to state 14
    comandoPrintint     go to state 15
    comandoPrintreal    go to state 16
    comandoPrintstring  go to state 17
    comandoInput        go to state 18


state 8

    0 $accept: programa . $end

    $end  shift, and go to state 27


state 9

    1 programa: lista_comando .

    $default  reduce using rule 1 (programa)


state 10

   20 comando: bloco .

    $default  reduce using rule 20 (comando)


state 11

    2 lista_comando: comando . EOL
    3              | comando . EOL lista_comando

    EOL  shift, and go to state 28


state 12

   19 comando: atribuicao .

    $default  reduce using rule 19 (comando)


state 13

    4 lista_comando: if_comando . lista_comando
    5              | if_comando .
   21 comando: if_comando .

    PRINT       shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    INT         shift, and go to state 4
    REAL        shift, and go to state 5
    CHAR        shift, and go to state 6
    OPEN_BLOCK  shift, and go to state 7

    EOL       reduce using rule 21 (comando)
    $default  reduce using rule 5 (lista_comando)

    lista_comando       go to state 29
    bloco               go to state 10
    comando             go to state 11
    atribuicao          go to state 12
    if_comando          go to state 13
    for_comando         go to state 14
    comandoPrintint     go to state 15
    comandoPrintreal    go to state 16
    comandoPrintstring  go to state 17
    comandoInput        go to state 18


state 14

    6 lista_comando: for_comando .
    7              | for_comando . lista_comando
   22 comando: for_comando .

    PRINT       shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    INT         shift, and go to state 4
    REAL        shift, and go to state 5
    CHAR        shift, and go to state 6
    OPEN_BLOCK  shift, and go to state 7

    EOL       reduce using rule 22 (comando)
    $default  reduce using rule 6 (lista_comando)

    lista_comando       go to state 30
    bloco               go to state 10
    comando             go to state 11
    atribuicao          go to state 12
    if_comando          go to state 13
    for_comando         go to state 14
    comandoPrintint     go to state 15
    comandoPrintreal    go to state 16
    comandoPrintstring  go to state 17
    comandoInput        go to state 18


state 15

   23 comando: comandoPrintint .

    $default  reduce using rule 23 (comando)


state 16

   24 comando: comandoPrintreal .

    $default  reduce using rule 24 (comando)


state 17

   25 comando: comandoPrintstring .

    $default  reduce using rule 25 (comando)


state 18

   26 comando: comandoInput .

    $default  reduce using rule 26 (comando)


state 19

   62 comandoPrintint: PRINT OPEN_BRACE . INT ident CLOSE_BRACE
   63 comandoPrintreal: PRINT OPEN_BRACE . REAL ident CLOSE_BRACE
   64 comandoPrintstring: PRINT OPEN_BRACE . CHAR ident CLOSE_BRACE

    INT   shift, and go to state 31
    REAL  shift, and go to state 32
    CHAR  shift, and go to state 33


state 20

   53 if_comando: IF OPEN_BRACE . comparacao CLOSE_BRACE bloco
   54           | IF OPEN_BRACE . comparacao CLOSE_BRACE bloco ELSE bloco

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36
    NOT         shift, and go to state 37

    ident           go to state 38
    exp             go to state 39
    comparacao      go to state 40
    soma            go to state 41
    subtracao       go to state 42
    divisao         go to state 43
    multiplicacao   go to state 44
    restoDiv        go to state 45
    igualdade       go to state 46
    diferenca       go to state 47
    compMaiorIgual  go to state 48
    compMenorIgual  go to state 49
    compMenor       go to state 50
    compMaior       go to state 51
    compAnd         go to state 52
    compOr          go to state 53
    compNot         go to state 54


state 21

   61 for_comando: FOR OPEN_BRACE . atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    INT   shift, and go to state 55
    REAL  shift, and go to state 56
    CHAR  shift, and go to state 57

    atribuicaoFor  go to state 58


state 22

    9 ident: ID .

    $default  reduce using rule 9 (ident)


state 23

   28 atribuicao: INT ident . '=' exp
   66 comandoInput: INT ident . '=' INPUT OPEN_BRACE CLOSE_BRACE

    '='  shift, and go to state 59


state 24

   27 atribuicao: REAL ident . '=' exp
   65 comandoInput: REAL ident . '=' INPUT OPEN_BRACE CLOSE_BRACE

    '='  shift, and go to state 60


state 25

   29 atribuicao: CHAR ident . '=' exp
   67 comandoInput: CHAR ident . '=' INPUT OPEN_BRACE CLOSE_BRACE

    '='  shift, and go to state 61


state 26

    8 bloco: OPEN_BLOCK lista_comando . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 62


state 27

    0 $accept: programa $end .

    $default  accept


state 28

    2 lista_comando: comando EOL .
    3              | comando EOL . lista_comando

    PRINT       shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    INT         shift, and go to state 4
    REAL        shift, and go to state 5
    CHAR        shift, and go to state 6
    OPEN_BLOCK  shift, and go to state 7

    $default  reduce using rule 2 (lista_comando)

    lista_comando       go to state 63
    bloco               go to state 10
    comando             go to state 11
    atribuicao          go to state 12
    if_comando          go to state 13
    for_comando         go to state 14
    comandoPrintint     go to state 15
    comandoPrintreal    go to state 16
    comandoPrintstring  go to state 17
    comandoInput        go to state 18


state 29

    4 lista_comando: if_comando lista_comando .

    $default  reduce using rule 4 (lista_comando)


state 30

    7 lista_comando: for_comando lista_comando .

    $default  reduce using rule 7 (lista_comando)


state 31

   62 comandoPrintint: PRINT OPEN_BRACE INT . ident CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 64


state 32

   63 comandoPrintreal: PRINT OPEN_BRACE REAL . ident CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 65


state 33

   64 comandoPrintstring: PRINT OPEN_BRACE CHAR . ident CLOSE_BRACE

    ID  shift, and go to state 22

    ident  go to state 66


state 34

   11 exp: NUMINTEIRO .

    $default  reduce using rule 11 (exp)


state 35

   10 exp: NUMREAL .

    $default  reduce using rule 10 (exp)


state 36

   12 exp: STRING .

    $default  reduce using rule 12 (exp)


state 37

   52 compNot: NOT . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 67
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 38

   13 exp: ident .

    $default  reduce using rule 13 (exp)


state 39

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   44 igualdade: exp . EQ exp
   45 diferenca: exp . NE exp
   46 compMaiorIgual: exp . MAIORIGUAL exp
   47 compMenorIgual: exp . MENORIGUAL exp
   48 compMenor: exp . MENOR exp
   49 compMaior: exp . MAIOR exp
   50 compAnd: exp . AND exp
   51 compOr: exp . OR exp

    MAIORIGUAL  shift, and go to state 68
    MENORIGUAL  shift, and go to state 69
    MENOR       shift, and go to state 70
    MAIOR       shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    EQ          shift, and go to state 74
    NE          shift, and go to state 75
    '-'         shift, and go to state 76
    '+'         shift, and go to state 77
    '*'         shift, and go to state 78
    '/'         shift, and go to state 79
    '%'         shift, and go to state 80


state 40

   53 if_comando: IF OPEN_BRACE comparacao . CLOSE_BRACE bloco
   54           | IF OPEN_BRACE comparacao . CLOSE_BRACE bloco ELSE bloco

    CLOSE_BRACE  shift, and go to state 81


state 41

   14 exp: soma .

    $default  reduce using rule 14 (exp)


state 42

   15 exp: subtracao .

    $default  reduce using rule 15 (exp)


state 43

   16 exp: divisao .

    $default  reduce using rule 16 (exp)


state 44

   17 exp: multiplicacao .

    $default  reduce using rule 17 (exp)


state 45

   18 exp: restoDiv .

    $default  reduce using rule 18 (exp)


state 46

   30 comparacao: igualdade .

    $default  reduce using rule 30 (comparacao)


state 47

   31 comparacao: diferenca .

    $default  reduce using rule 31 (comparacao)


state 48

   34 comparacao: compMaiorIgual .

    $default  reduce using rule 34 (comparacao)


state 49

   35 comparacao: compMenorIgual .

    $default  reduce using rule 35 (comparacao)


state 50

   33 comparacao: compMenor .

    $default  reduce using rule 33 (comparacao)


state 51

   32 comparacao: compMaior .

    $default  reduce using rule 32 (comparacao)


state 52

   36 comparacao: compAnd .

    $default  reduce using rule 36 (comparacao)


state 53

   37 comparacao: compOr .

    $default  reduce using rule 37 (comparacao)


state 54

   38 comparacao: compNot .

    $default  reduce using rule 38 (comparacao)


state 55

   59 atribuicaoFor: INT . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 82


state 56

   58 atribuicaoFor: REAL . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 83


state 57

   60 atribuicaoFor: CHAR . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 84


state 58

   61 for_comando: FOR OPEN_BRACE atribuicaoFor . EOL comparacao EOL paradaFor CLOSE_BRACE bloco

    EOL  shift, and go to state 85


state 59

   28 atribuicao: INT ident '=' . exp
   66 comandoInput: INT ident '=' . INPUT OPEN_BRACE CLOSE_BRACE

    INPUT       shift, and go to state 86
    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 87
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 60

   27 atribuicao: REAL ident '=' . exp
   65 comandoInput: REAL ident '=' . INPUT OPEN_BRACE CLOSE_BRACE

    INPUT       shift, and go to state 88
    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 89
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 61

   29 atribuicao: CHAR ident '=' . exp
   67 comandoInput: CHAR ident '=' . INPUT OPEN_BRACE CLOSE_BRACE

    INPUT       shift, and go to state 90
    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 91
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 62

    8 bloco: OPEN_BLOCK lista_comando CLOSE_BLOCK .

    $default  reduce using rule 8 (bloco)


state 63

    3 lista_comando: comando EOL lista_comando .

    $default  reduce using rule 3 (lista_comando)


state 64

   62 comandoPrintint: PRINT OPEN_BRACE INT ident . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 92


state 65

   63 comandoPrintreal: PRINT OPEN_BRACE REAL ident . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 93


state 66

   64 comandoPrintstring: PRINT OPEN_BRACE CHAR ident . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 94


state 67

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   52 compNot: NOT exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 52 (compNot)


state 68

   46 compMaiorIgual: exp MAIORIGUAL . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 95
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 69

   47 compMenorIgual: exp MENORIGUAL . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 96
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 70

   48 compMenor: exp MENOR . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 97
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 71

   49 compMaior: exp MAIOR . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 98
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 72

   50 compAnd: exp AND . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 99
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 73

   51 compOr: exp OR . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 100
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 74

   44 igualdade: exp EQ . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 101
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 75

   45 diferenca: exp NE . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 102
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 76

   40 subtracao: exp '-' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 103
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 77

   39 soma: exp '+' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 104
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 78

   42 multiplicacao: exp '*' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 105
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 79

   41 divisao: exp '/' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 106
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 80

   43 restoDiv: exp '%' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 107
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 81

   53 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE . bloco
   54           | IF OPEN_BRACE comparacao CLOSE_BRACE . bloco ELSE bloco

    OPEN_BLOCK  shift, and go to state 7

    bloco  go to state 108


state 82

   59 atribuicaoFor: INT ident . '=' exp

    '='  shift, and go to state 109


state 83

   58 atribuicaoFor: REAL ident . '=' exp

    '='  shift, and go to state 110


state 84

   60 atribuicaoFor: CHAR ident . '=' exp

    '='  shift, and go to state 111


state 85

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL . comparacao EOL paradaFor CLOSE_BRACE bloco

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36
    NOT         shift, and go to state 37

    ident           go to state 38
    exp             go to state 39
    comparacao      go to state 112
    soma            go to state 41
    subtracao       go to state 42
    divisao         go to state 43
    multiplicacao   go to state 44
    restoDiv        go to state 45
    igualdade       go to state 46
    diferenca       go to state 47
    compMaiorIgual  go to state 48
    compMenorIgual  go to state 49
    compMenor       go to state 50
    compMaior       go to state 51
    compAnd         go to state 52
    compOr          go to state 53
    compNot         go to state 54


state 86

   66 comandoInput: INT ident '=' INPUT . OPEN_BRACE CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 113


state 87

   28 atribuicao: INT ident '=' exp .
   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 28 (atribuicao)


state 88

   65 comandoInput: REAL ident '=' INPUT . OPEN_BRACE CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 114


state 89

   27 atribuicao: REAL ident '=' exp .
   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 27 (atribuicao)


state 90

   67 comandoInput: CHAR ident '=' INPUT . OPEN_BRACE CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 115


state 91

   29 atribuicao: CHAR ident '=' exp .
   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 29 (atribuicao)


state 92

   62 comandoPrintint: PRINT OPEN_BRACE INT ident CLOSE_BRACE .

    $default  reduce using rule 62 (comandoPrintint)


state 93

   63 comandoPrintreal: PRINT OPEN_BRACE REAL ident CLOSE_BRACE .

    $default  reduce using rule 63 (comandoPrintreal)


state 94

   64 comandoPrintstring: PRINT OPEN_BRACE CHAR ident CLOSE_BRACE .

    $default  reduce using rule 64 (comandoPrintstring)


state 95

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   46 compMaiorIgual: exp MAIORIGUAL exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 46 (compMaiorIgual)


state 96

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   47 compMenorIgual: exp MENORIGUAL exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 47 (compMenorIgual)


state 97

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   48 compMenor: exp MENOR exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 48 (compMenor)


state 98

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   49 compMaior: exp MAIOR exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 49 (compMaior)


state 99

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   50 compAnd: exp AND exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 50 (compAnd)


state 100

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   51 compOr: exp OR exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 51 (compOr)


state 101

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   44 igualdade: exp EQ exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 44 (igualdade)


state 102

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   45 diferenca: exp NE exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 45 (diferenca)


state 103

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   40          | exp '-' exp .
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 40 (subtracao)


state 104

   39 soma: exp . '+' exp
   39     | exp '+' exp .
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 39 (soma)


state 105

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   42              | exp '*' exp .
   43 restoDiv: exp . '%' exp

    '%'  shift, and go to state 80

    $default  reduce using rule 42 (multiplicacao)


state 106

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   41        | exp '/' exp .
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp

    '%'  shift, and go to state 80

    $default  reduce using rule 41 (divisao)


state 107

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   43         | exp '%' exp .

    $default  reduce using rule 43 (restoDiv)


state 108

   53 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco .
   54           | IF OPEN_BRACE comparacao CLOSE_BRACE bloco . ELSE bloco

    ELSE  shift, and go to state 116

    $default  reduce using rule 53 (if_comando)


state 109

   59 atribuicaoFor: INT ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 117
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 110

   58 atribuicaoFor: REAL ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 118
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 111

   60 atribuicaoFor: CHAR ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 119
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 112

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao . EOL paradaFor CLOSE_BRACE bloco

    EOL  shift, and go to state 120


state 113

   66 comandoInput: INT ident '=' INPUT OPEN_BRACE . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 121


state 114

   65 comandoInput: REAL ident '=' INPUT OPEN_BRACE . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 122


state 115

   67 comandoInput: CHAR ident '=' INPUT OPEN_BRACE . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 123


state 116

   54 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE . bloco

    OPEN_BLOCK  shift, and go to state 7

    bloco  go to state 124


state 117

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   59 atribuicaoFor: INT ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 59 (atribuicaoFor)


state 118

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   58 atribuicaoFor: REAL ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 58 (atribuicaoFor)


state 119

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   60 atribuicaoFor: CHAR ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 60 (atribuicaoFor)


state 120

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL . paradaFor CLOSE_BRACE bloco

    INT   shift, and go to state 125
    REAL  shift, and go to state 126
    CHAR  shift, and go to state 127

    paradaFor  go to state 128


state 121

   66 comandoInput: INT ident '=' INPUT OPEN_BRACE CLOSE_BRACE .

    $default  reduce using rule 66 (comandoInput)


state 122

   65 comandoInput: REAL ident '=' INPUT OPEN_BRACE CLOSE_BRACE .

    $default  reduce using rule 65 (comandoInput)


state 123

   67 comandoInput: CHAR ident '=' INPUT OPEN_BRACE CLOSE_BRACE .

    $default  reduce using rule 67 (comandoInput)


state 124

   54 if_comando: IF OPEN_BRACE comparacao CLOSE_BRACE bloco ELSE bloco .

    $default  reduce using rule 54 (if_comando)


state 125

   56 paradaFor: INT . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 129


state 126

   55 paradaFor: REAL . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 130


state 127

   57 paradaFor: CHAR . ident '=' exp

    ID  shift, and go to state 22

    ident  go to state 131


state 128

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor . CLOSE_BRACE bloco

    CLOSE_BRACE  shift, and go to state 132


state 129

   56 paradaFor: INT ident . '=' exp

    '='  shift, and go to state 133


state 130

   55 paradaFor: REAL ident . '=' exp

    '='  shift, and go to state 134


state 131

   57 paradaFor: CHAR ident . '=' exp

    '='  shift, and go to state 135


state 132

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE . bloco

    OPEN_BLOCK  shift, and go to state 7

    bloco  go to state 136


state 133

   56 paradaFor: INT ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 137
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 134

   55 paradaFor: REAL ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 138
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 135

   57 paradaFor: CHAR ident '=' . exp

    ID          shift, and go to state 22
    NUMINTEIRO  shift, and go to state 34
    NUMREAL     shift, and go to state 35
    STRING      shift, and go to state 36

    ident          go to state 38
    exp            go to state 139
    soma           go to state 41
    subtracao      go to state 42
    divisao        go to state 43
    multiplicacao  go to state 44
    restoDiv       go to state 45


state 136

   61 for_comando: FOR OPEN_BRACE atribuicaoFor EOL comparacao EOL paradaFor CLOSE_BRACE bloco .

    $default  reduce using rule 61 (for_comando)


state 137

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   56 paradaFor: INT ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 56 (paradaFor)


state 138

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   55 paradaFor: REAL ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 55 (paradaFor)


state 139

   39 soma: exp . '+' exp
   40 subtracao: exp . '-' exp
   41 divisao: exp . '/' exp
   42 multiplicacao: exp . '*' exp
   43 restoDiv: exp . '%' exp
   57 paradaFor: CHAR ident '=' exp .

    '-'  shift, and go to state 76
    '+'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 57 (paradaFor)
